// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: walcdc.proto

package ai.sapper.walcdc.common.model;

/**
 * Protobuf type {@code ai_sapper_walcdc_common_model.Transaction}
 */
public  final class Transaction extends
    com.google.protobuf.GeneratedMessage
    implements TransactionOrBuilder {
  // Use Transaction.newBuilder() to construct.
  private Transaction(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private Transaction(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final Transaction defaultInstance;
  public static Transaction getDefaultInstance() {
    return defaultInstance;
  }

  public Transaction getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private Transaction(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            txId_ = input.readInt64();
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              timestamp_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000002;
            }
            timestamp_.add(input.readInt64());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
              timestamp_ = new java.util.ArrayList<java.lang.Long>();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              timestamp_.add(input.readInt64());
            }
            input.popLimit(limit);
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            ai.sapper.walcdc.common.model.Transaction.TxType value = ai.sapper.walcdc.common.model.Transaction.TxType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(3, rawValue);
            } else {
              bitField0_ |= 0x00000002;
              type_ = value;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        timestamp_ = java.util.Collections.unmodifiableList(timestamp_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return ai.sapper.walcdc.common.model.WALCDC.internal_static_ai_sapper_walcdc_common_model_Transaction_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return ai.sapper.walcdc.common.model.WALCDC.internal_static_ai_sapper_walcdc_common_model_Transaction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            ai.sapper.walcdc.common.model.Transaction.class, ai.sapper.walcdc.common.model.Transaction.Builder.class);
  }

  public static com.google.protobuf.Parser<Transaction> PARSER =
      new com.google.protobuf.AbstractParser<Transaction>() {
    public Transaction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Transaction(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<Transaction> getParserForType() {
    return PARSER;
  }

  /**
   * Protobuf enum {@code ai_sapper_walcdc_common_model.Transaction.TxType}
   */
  public enum TxType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DDL_CREATE_ENTITY = 0;</code>
     */
    DDL_CREATE_ENTITY(0, 0),
    /**
     * <code>DDL_UPDATE_ENTITY = 1;</code>
     */
    DDL_UPDATE_ENTITY(1, 1),
    /**
     * <code>DDL_DROP_ENTITY = 2;</code>
     */
    DDL_DROP_ENTITY(2, 2),
    /**
     * <code>DML_INSERT_ENTITY = 3;</code>
     */
    DML_INSERT_ENTITY(3, 3),
    /**
     * <code>DML_UPDATE_ENTITY = 4;</code>
     */
    DML_UPDATE_ENTITY(4, 4),
    /**
     * <code>DML_DELETE_ENTITY = 5;</code>
     */
    DML_DELETE_ENTITY(5, 5),
    ;

    /**
     * <code>DDL_CREATE_ENTITY = 0;</code>
     */
    public static final int DDL_CREATE_ENTITY_VALUE = 0;
    /**
     * <code>DDL_UPDATE_ENTITY = 1;</code>
     */
    public static final int DDL_UPDATE_ENTITY_VALUE = 1;
    /**
     * <code>DDL_DROP_ENTITY = 2;</code>
     */
    public static final int DDL_DROP_ENTITY_VALUE = 2;
    /**
     * <code>DML_INSERT_ENTITY = 3;</code>
     */
    public static final int DML_INSERT_ENTITY_VALUE = 3;
    /**
     * <code>DML_UPDATE_ENTITY = 4;</code>
     */
    public static final int DML_UPDATE_ENTITY_VALUE = 4;
    /**
     * <code>DML_DELETE_ENTITY = 5;</code>
     */
    public static final int DML_DELETE_ENTITY_VALUE = 5;


    public final int getNumber() { return value; }

    public static TxType valueOf(int value) {
      switch (value) {
        case 0: return DDL_CREATE_ENTITY;
        case 1: return DDL_UPDATE_ENTITY;
        case 2: return DDL_DROP_ENTITY;
        case 3: return DML_INSERT_ENTITY;
        case 4: return DML_UPDATE_ENTITY;
        case 5: return DML_DELETE_ENTITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TxType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TxType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TxType>() {
            public TxType findValueByNumber(int number) {
              return TxType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return ai.sapper.walcdc.common.model.Transaction.getDescriptor().getEnumTypes().get(0);
    }

    private static final TxType[] VALUES = values();

    public static TxType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TxType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ai_sapper_walcdc_common_model.Transaction.TxType)
  }

  private int bitField0_;
  // required int64 txId = 1;
  public static final int TXID_FIELD_NUMBER = 1;
  private long txId_;
  /**
   * <code>required int64 txId = 1;</code>
   */
  public boolean hasTxId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required int64 txId = 1;</code>
   */
  public long getTxId() {
    return txId_;
  }

  // repeated int64 timestamp = 2;
  public static final int TIMESTAMP_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Long> timestamp_;
  /**
   * <code>repeated int64 timestamp = 2;</code>
   */
  public java.util.List<java.lang.Long>
      getTimestampList() {
    return timestamp_;
  }
  /**
   * <code>repeated int64 timestamp = 2;</code>
   */
  public int getTimestampCount() {
    return timestamp_.size();
  }
  /**
   * <code>repeated int64 timestamp = 2;</code>
   */
  public long getTimestamp(int index) {
    return timestamp_.get(index);
  }

  // required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;
  public static final int TYPE_FIELD_NUMBER = 3;
  private ai.sapper.walcdc.common.model.Transaction.TxType type_;
  /**
   * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
   */
  public boolean hasType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
   */
  public ai.sapper.walcdc.common.model.Transaction.TxType getType() {
    return type_;
  }

  private void initFields() {
    txId_ = 0L;
    timestamp_ = java.util.Collections.emptyList();
    type_ = ai.sapper.walcdc.common.model.Transaction.TxType.DDL_CREATE_ENTITY;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized != -1) return isInitialized == 1;

    if (!hasTxId()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasType()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt64(1, txId_);
    }
    for (int i = 0; i < timestamp_.size(); i++) {
      output.writeInt64(2, timestamp_.get(i));
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeEnum(3, type_.getNumber());
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, txId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < timestamp_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt64SizeNoTag(timestamp_.get(i));
      }
      size += dataSize;
      size += 1 * getTimestampList().size();
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, type_.getNumber());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static ai.sapper.walcdc.common.model.Transaction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(ai.sapper.walcdc.common.model.Transaction prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ai_sapper_walcdc_common_model.Transaction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder>
     implements ai.sapper.walcdc.common.model.TransactionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ai.sapper.walcdc.common.model.WALCDC.internal_static_ai_sapper_walcdc_common_model_Transaction_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ai.sapper.walcdc.common.model.WALCDC.internal_static_ai_sapper_walcdc_common_model_Transaction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ai.sapper.walcdc.common.model.Transaction.class, ai.sapper.walcdc.common.model.Transaction.Builder.class);
    }

    // Construct using ai.sapper.walcdc.common.model.Transaction.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      txId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      timestamp_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      type_ = ai.sapper.walcdc.common.model.Transaction.TxType.DDL_CREATE_ENTITY;
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return ai.sapper.walcdc.common.model.WALCDC.internal_static_ai_sapper_walcdc_common_model_Transaction_descriptor;
    }

    public ai.sapper.walcdc.common.model.Transaction getDefaultInstanceForType() {
      return ai.sapper.walcdc.common.model.Transaction.getDefaultInstance();
    }

    public ai.sapper.walcdc.common.model.Transaction build() {
      ai.sapper.walcdc.common.model.Transaction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public ai.sapper.walcdc.common.model.Transaction buildPartial() {
      ai.sapper.walcdc.common.model.Transaction result = new ai.sapper.walcdc.common.model.Transaction(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.txId_ = txId_;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        timestamp_ = java.util.Collections.unmodifiableList(timestamp_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.timestamp_ = timestamp_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000002;
      }
      result.type_ = type_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof ai.sapper.walcdc.common.model.Transaction) {
        return mergeFrom((ai.sapper.walcdc.common.model.Transaction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(ai.sapper.walcdc.common.model.Transaction other) {
      if (other == ai.sapper.walcdc.common.model.Transaction.getDefaultInstance()) return this;
      if (other.hasTxId()) {
        setTxId(other.getTxId());
      }
      if (!other.timestamp_.isEmpty()) {
        if (timestamp_.isEmpty()) {
          timestamp_ = other.timestamp_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureTimestampIsMutable();
          timestamp_.addAll(other.timestamp_);
        }
        onChanged();
      }
      if (other.hasType()) {
        setType(other.getType());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      if (!hasTxId()) {
        
        return false;
      }
      if (!hasType()) {
        
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      ai.sapper.walcdc.common.model.Transaction parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (ai.sapper.walcdc.common.model.Transaction) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    // required int64 txId = 1;
    private long txId_ ;
    /**
     * <code>required int64 txId = 1;</code>
     */
    public boolean hasTxId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 txId = 1;</code>
     */
    public long getTxId() {
      return txId_;
    }
    /**
     * <code>required int64 txId = 1;</code>
     */
    public Builder setTxId(long value) {
      bitField0_ |= 0x00000001;
      txId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required int64 txId = 1;</code>
     */
    public Builder clearTxId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      txId_ = 0L;
      onChanged();
      return this;
    }

    // repeated int64 timestamp = 2;
    private java.util.List<java.lang.Long> timestamp_ = java.util.Collections.emptyList();
    private void ensureTimestampIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        timestamp_ = new java.util.ArrayList<java.lang.Long>(timestamp_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getTimestampList() {
      return java.util.Collections.unmodifiableList(timestamp_);
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public int getTimestampCount() {
      return timestamp_.size();
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public long getTimestamp(int index) {
      return timestamp_.get(index);
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public Builder setTimestamp(
        int index, long value) {
      ensureTimestampIsMutable();
      timestamp_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public Builder addTimestamp(long value) {
      ensureTimestampIsMutable();
      timestamp_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public Builder addAllTimestamp(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureTimestampIsMutable();
      super.addAll(values, timestamp_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int64 timestamp = 2;</code>
     */
    public Builder clearTimestamp() {
      timestamp_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    // required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;
    private ai.sapper.walcdc.common.model.Transaction.TxType type_ = ai.sapper.walcdc.common.model.Transaction.TxType.DDL_CREATE_ENTITY;
    /**
     * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
     */
    public ai.sapper.walcdc.common.model.Transaction.TxType getType() {
      return type_;
    }
    /**
     * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
     */
    public Builder setType(ai.sapper.walcdc.common.model.Transaction.TxType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required .ai_sapper_walcdc_common_model.Transaction.TxType type = 3;</code>
     */
    public Builder clearType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      type_ = ai.sapper.walcdc.common.model.Transaction.TxType.DDL_CREATE_ENTITY;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:ai_sapper_walcdc_common_model.Transaction)
  }

  static {
    defaultInstance = new Transaction(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:ai_sapper_walcdc_common_model.Transaction)
}

